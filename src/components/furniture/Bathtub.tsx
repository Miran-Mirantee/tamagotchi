/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, Outlines } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import useObjectStore from "../../stores/useObjectStore";

type GLTFResult = GLTF & {
  nodes: {
    Bathroom_Bathtub_1: THREE.Mesh;
    Bathroom_Bathtub_2: THREE.Mesh;
  };
  materials: {
    White: THREE.MeshStandardMaterial;
    Grey: THREE.MeshStandardMaterial;
  };
};

export default function Bathtub(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/furniture/Bathtub.glb"
  ) as GLTFResult;
  const currentObject = useObjectStore((state) => state.currentObject);
  const outlineColor = useObjectStore((state) => state.outlineColor);

  const PresetOutlines = () => {
    return <Outlines angle={0} color={outlineColor} scale={1} thickness={5} />;
  };

  return (
    <group {...props} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100} name="Bathtub">
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Bathroom_Bathtub_1.geometry}
          material={materials.White}
        >
          {currentObject?.name == "Bathtub" && <PresetOutlines />}
        </mesh>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Bathroom_Bathtub_2.geometry}
          material={materials.Grey}
        >
          {currentObject?.name == "Bathtub" && <PresetOutlines />}
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/models/furniture/Bathtub.glb");
