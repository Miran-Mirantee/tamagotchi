/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef, useEffect } from "react";
import { useGLTF, Outlines } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import useObjectStore from "../../stores/useObjectStore";

type GLTFResult = GLTF & {
  nodes: {
    Bathroom_Toilet: THREE.Mesh;
  };
  materials: {
    White: THREE.MeshStandardMaterial;
  };
};

export default function Toilet(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/furniture/Toilet.glb"
  ) as GLTFResult;
  const currentObject = useObjectStore((state) => state.currentObject);
  const outlineColor = useObjectStore((state) => state.outlineColor);
  const ref = useRef();

  useEffect(() => {
    console.log("outlines", ref);
  }, [ref]);

  return (
    <group {...props} dispose={null}>
      <mesh
        name="Toilet"
        castShadow
        receiveShadow
        geometry={nodes.Bathroom_Toilet.geometry}
        material={materials.White}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={100}
      >
        {currentObject?.name == "Toilet" && (
          <Outlines angle={0} color={outlineColor} scale={1.01} thickness={5} />
        )}
      </mesh>
    </group>
  );
}

useGLTF.preload("/models/furniture/Toilet.glb");
