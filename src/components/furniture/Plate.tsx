/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import React, { useRef } from "react";
import { useGLTF, Outlines } from "@react-three/drei";
import { GLTF } from "three-stdlib";
import useTamagotchiStore from "../../stores/useTamagotchiStore";
import useObjectStore from "../../stores/useObjectStore";
import Food from "../Food";

type GLTFResult = GLTF & {
  nodes: {
    Plate_2: THREE.Mesh;
  };
  materials: {
    ["White.002"]: THREE.MeshStandardMaterial;
  };
};

export default function Plate(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/furniture/Plate.glb"
  ) as GLTFResult;
  const currentFood = useTamagotchiStore((state) => state.currentFood);
  const currentObject = useObjectStore((state) => state.currentObject);
  const outlineColor = useObjectStore((state) => state.outlineColor);

  return (
    <group {...props} dispose={null}>
      {currentFood && <Food url={currentFood.model} scale={0.5} />}

      <group scale={[2.3, 1, 2.3]}>
        <mesh
          name="Plate"
          castShadow
          geometry={nodes.Plate_2.geometry}
          material={materials["White.002"]}
          rotation={[-Math.PI / 2, 0, 0]}
          scale={100}
        >
          {currentObject?.name == "Plate" && (
            <Outlines
              angle={0}
              color={outlineColor}
              scale={1.1}
              thickness={2}
            />
          )}
        </mesh>
      </group>
    </group>
  );
}

useGLTF.preload("/models/furniture/Plate.glb");
