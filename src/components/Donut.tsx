/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Donut1_1: THREE.Mesh;
    Donut1_2: THREE.Mesh;
    Donut1_3: THREE.Mesh;
    Donut1_4: THREE.Mesh;
    Donut1_5: THREE.Mesh;
  };
  materials: {
    LightYellow: THREE.MeshStandardMaterial;
    PalePink: THREE.MeshStandardMaterial;
    Blue: THREE.MeshStandardMaterial;
    Green: THREE.MeshStandardMaterial;
    Red: THREE.MeshStandardMaterial;
  };
};

export default function Donut(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF("/models/Donut.glb") as GLTFResult;
  return (
    <group {...props} dispose={null} scale={0.45} position-y={0.11}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Donut1_1.geometry}
          material={materials.LightYellow}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Donut1_2.geometry}
          material={materials.PalePink}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Donut1_3.geometry}
          material={materials.Blue}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Donut1_4.geometry}
          material={materials.Green}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Donut1_5.geometry}
          material={materials.Red}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/Donut.glb");
