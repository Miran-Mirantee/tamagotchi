/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from "three";
import { useGLTF } from "@react-three/drei";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    Cheeseburger_1: THREE.Mesh;
    Cheeseburger_2: THREE.Mesh;
    Cheeseburger_3: THREE.Mesh;
    Cheeseburger_4: THREE.Mesh;
  };
  materials: {
    Brown: THREE.MeshStandardMaterial;
    Cheese: THREE.MeshStandardMaterial;
    LightYellow: THREE.MeshStandardMaterial;
    White: THREE.MeshStandardMaterial;
  };
};

export default function Cheeseburger(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/Cheeseburger.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null} scale={0.25} position-y={0.15}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={100}>
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cheeseburger_1.geometry}
          material={materials.Brown}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cheeseburger_2.geometry}
          material={materials.Cheese}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cheeseburger_3.geometry}
          material={materials.LightYellow}
        />
        <mesh
          castShadow
          receiveShadow
          geometry={nodes.Cheeseburger_4.geometry}
          material={materials.White}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/Cheeseburger.glb");
